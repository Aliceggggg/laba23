#include <iostream>
#include <fstream>
#include <cstdlib>  
#include <ctime>   
#include <vector>
#include <windows.h>

using namespace std;

struct TreeNode {
    int value;
    TreeNode* left;
    TreeNode* right;

    TreeNode(int val) : value(val), left(nullptr), right(nullptr) {}
};

TreeNode* insert(TreeNode* root, int value) {
    if (!root) return new TreeNode(value);
    if (value < root->value) root->left = insert(root->left, value);
    else root->right = insert(root->right, value);
    return root;
}

TreeNode* fillRandom(TreeNode* root, int size, int minVal, int maxVal) {
    srand(time(nullptr));
    for (int i = 0; i < size; i++) {
        int value = minVal + rand() % (maxVal - minVal + 1);
        root = insert(root, value);
    }
    return root;
}

TreeNode* fillFromFile(TreeNode* root, const string& filename) {
    ifstream file(filename);
    int value;
    while (file >> value) {
        root = insert(root, value);
    }
    file.close();
    return root;
}

TreeNode* fillFromTerminal(TreeNode* root) {
    int n;
    cout << "Введите количество элементов: ";
    cin >> n;

    cout << "Введите элементы:\n";
    for (int i = 0; i < n; i++) {
        int value;
        cin >> value;
        root = insert(root, value);
    }
    return root;
}

void inOrderTraversal(TreeNode* root) {
    if (!root) return;
    inOrderTraversal(root->left);
    cout << root->value << " ";
    inOrderTraversal(root->right);
}
